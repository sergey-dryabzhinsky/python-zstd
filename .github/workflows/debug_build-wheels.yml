name: Build wheels w/o cibw

on: [push, pull_request]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && github.sha || '' }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: Build wheel - ${{ matrix.os.name }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Ubuntu 24+16 i386 CPython 2.7
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "2.7"
            getpipurl: https://bootstrap.pypa.io/pip/2.7/get-pip.py
            pypkg: python2.7
            pyengine_tag: cp27-cp27mu
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 i386 CPython 3.4
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.4"
            getpipurl: https://bootstrap.pypa.io/pip/3.4/get-pip.py 
            pypkg: python3.4
            pyengine_tag: cp34-cp34m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 i386 CPython 3.5
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.5"
            getpipurl: https://bootstrap.pypa.io/pip/3.5/get-pip.py
            pypkg: python3.5
            pyengine_tag: cp35-cp35m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 i386 CPython 3.6
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.6"
            getpipurl: https://bootstrap.pypa.io/pip/3.6/get-pip.py
            pypkg: python3.6
            pypkgadd: python3.6-distutils
            pyengine_tag: cp36-cp36m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 i386 CPython 3.7
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.7"
            getpipurl: https://bootstrap.pypa.io/pip/3.7/get-pip.py
            pypkg: python3.7
            pypkgadd: python3.7-distutils
            pyengine_tag: cp37-cp37m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 i386 CPython 3.8
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.8"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pypkg: python3.8
            pypkgadd: python3.8-distutils
            pyengine_tag: cp38-cp38
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 i386 CPython 3.9
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.9"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pypkg: python3.9
            pypkgadd: python3.9-distutils
            pyengine_tag: cp39-cp39
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+20 i386 CPython 3.10
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: focal
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.10"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pypkg: python3.10
            pypkgadd: python3.10-distutils
            pyengine_tag: cp310-cp310
            libc_tag: manylinux_2_19
          - name: Ubuntu 24+20 i386 CPython 3.11
            runs-on: ubuntu-latest
            matrix: linux
            arch: i386
            tag_arch: i686
            release: focal
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pyver: "3.11"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pypkg: python3.11
            pypkgadd: python3.11-distutils
            pyengine_tag: cp311-cp311
            libc_tag: manylinux_2_19
          - name: Ubuntu 24+16 amd64 CPython2.7
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python2.7
            pyver: "2.7"
            getpipurl: https://bootstrap.pypa.io/pip/2.7/get-pip.py
            pyengine_tag: cp27-cp27mu
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 amd64 CPython3.4
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.4
            pyver: "3.4"
            getpipurl: https://bootstrap.pypa.io/pip/3.4/get-pip.py
            pyengine_tag: cp34-cp34m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 amd64 CPython3.5
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.5
            pyver: "3.5"
            getpipurl: https://bootstrap.pypa.io/pip/3.5/get-pip.py
            pyengine_tag: cp35-cp35m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 amd64 CPython3.6
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.6
            pypkgadd: python3.6-distutils
            pyver: "3.6"
            getpipurl: https://bootstrap.pypa.io/pip/3.6/get-pip.py
            pyengine_tag: cp36-cp36m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 amd64 CPython3.7
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.7
            pypkgadd: python3.7-distutils
            pyver: "3.7"
            getpipurl: https://bootstrap.pypa.io/pip/3.7/get-pip.py
            pyengine_tag: cp37-cp37m
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 amd64 CPython3.8
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.8
            pypkgadd: python3.8-distutils
            pyver: "3.8"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pyengine_tag: cp38-cp38
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+16 amd64 CPython3.9
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: xenial
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.9
            pypkgadd: python3.9-distutils
            pyver: "3.9"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pyengine_tag: cp39-cp39
            libc_tag: manylinux_2_17
          - name: Ubuntu 24+20 amd64 CPython3.10
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: focal
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.10
            pypkgadd: python3.10-distutils
            pyver: "3.10"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pyengine_tag: cp310-cp310
            libc_tag: manylinux_2_19
          - name: Ubuntu 24+20 amd64 CPython3.11
            runs-on: ubuntu-latest
            matrix: linux
            arch: amd64
            tag_arch: x86_64
            release: focal
            mirror: http://azure.archive.ubuntu.com/ubuntu
            version: 1.5.6.3
            pypkg: python3.11
            pypkgadd: python3.11-distutils
            pyver: "3.11"
            getpipurl: https://bootstrap.pypa.io/pip/get-pip.py
            pyengine_tag: cp311-cp311
            libc_tag: manylinux_2_19
     
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Update and upgrade Ubuntu 24
        if: matrix.os.matrix == 'linux'
        run: |
          sudo which apt
          sudo apt update; 
          sudo apt purge -y firefox lxd snapd;
          sudo apt install -y zram-config;
          sudo apt list --upgradable;
          sudo apt upgrade -y;
          sudo apt install -f

      - name: Build source distribution with Ubuntu
        if: matrix.os.matrix == 'linux'
        run: |
          sudo apt install -y devscripts debootstrap qemu-user;
          pip install build;
          python -m build --sdist --outdir dist .
         
      - name: Debootstrap Ubuntu ${{matrix.os.release}} ${{matrix.os.arch}}
        if: matrix.os.matrix == 'linux'
        run: |
          sudo debootstrap --no-merged-usr --verbose --include=sudo,wget,curl,ca-certificates --arch=${{matrix.os.arch}} ${{matrix.os.release}} ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} ${{matrix.os.mirror}} || tail ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/debootstrap/debootstrap.log
     
      - name: Update and Upgrade Ubuntu ${{matrix.os.release}}
        if: matrix.os.matrix == 'linux'
        run: |
          sudo mkdir -p ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/build_wheel
          sudo mount none ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/proc -t proc
          sudo mount none ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/dev/pts -t devpts
          sudo mount none ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/sys -t sysfs
          echo " deb [trusted=yes] http://packages.rusoft.ru/ppa/rusoft/python ubuntu-${{matrix.os.release}} main" > rusoft-python.list
          echo " deb [trusted=yes] http://packages.rusoft.ru/ppa/rusoft/backports ubuntu-${{matrix.os.release}} main" > rusoft-backports.list
          echo " deb [trusted=yes] http://packages.rusoft.ru/ppa/rusoft/packages ubuntu-${{matrix.os.release}} main" > rusoft-packages.list
          echo " deb [trusted=yes] http://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu ${{matrix.os.release}} main" > deadsnakes.list
          sudo find ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} -iname apt
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /usr/bin/apt update
          sudo cp -v ./*.list ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/etc/apt/sources.list.d
          false && sudo rm -fv ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/etc/apt/trusted.gpg.d/* && sudo rm -fv ./ubuntu-xenial-x86/etc/apt/trusted.gpg
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /bin/bash -c 'cd /etc/apt/trusted.gpg.d && wget http://packages.rusoft.ru/apt/public.gpg -Orusoft.gpg'
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /bin/bash -c 'cd /etc/apt/trusted.gpg.d && wget http://packages.rusoft.ru/apt/public-old.gpg -Orusoft-old.gpg'
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /bin/bash -c 'apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys A2CE4BCCC50209DD || true'
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /usr/bin/apt update
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /usr/bin/apt upgrade -y
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /usr/bin/apt -fy install
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /usr/bin/apt upgrade -y
           
           
      - name: Pepare dev files
        if: matrix.os.matrix == 'linux'
        run: |
           sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /usr/bin/apt install -y libzstd-dev

      - name: Pepare for ${{matrix.os.pypkg}} ${{matrix.os.arch}}
        if: matrix.os.matrix == 'linux'
        run: |
           sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /usr/bin/apt install -y ${{matrix.os.pypkg}}-dev gcc pkg-config ${{matrix.os.pypkgadd}}
           sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /bin/bash -c "wget ${{matrix.os.getpipurl}} -O get-pip.py && ${{matrix.os.pypkg}} get-pip.py || true"
           sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /bin/bash -c "${{matrix.os.pypkg}} -m pip install -U 'setuptools<72.0'" 
                    
      - name: Pepare source and build wheel for ${{matrix.os.pypkg}} ${{matrix.os.arch}}
        if: matrix.os.matrix == 'linux'
        run: |
          sudo mkdir -p ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/build_wheel/
          sudo tar -xvf dist/zstd-${{matrix.os.version}}.tar.gz -C ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/build_wheel/
          false && sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} env 
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} pkg-config libzstd --modversion 
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /bin/bash -c "cd /build_wheel/zstd-${{matrix.os.version}} && ZSTD_ASM=1 _ZSTD_LEGACY=1 _ZSTD_ASM_BMI2=1 ZSTD_THREADS=1 _ZSTD_EXTERNAL=0 python${{matrix.os.pyver}} setup.py bdist_wheel clean"

      - name: Test wheel for ${{matrix.os.pypkg}} ${{matrix.os.arch}}
        if: matrix.os.matrix == 'linux'
        run: |
          sudo chroot ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}} /bin/bash -c "cd /build_wheel/zstd-${{matrix.os.version}} && python${{matrix.os.pyver}} setup.py test"

      - name: Pepare wheel for upload
        if: matrix.os.matrix == 'linux'
        run: |
           sudo cp -v ./ubuntu-${{matrix.os.release}}-${{matrix.os.arch}}/build_wheel/zstd-${{matrix.os.version}}/dist/* ./dist
           sudo ls -lh ./dist/* 
           sudo mv -v ./dist/"zstd-${{matrix.os.version}}-${{matrix.os.pyengine_tag}}-linux_${{matrix.os.tag_arch}}.whl" ./dist/"zstd-${{matrix.os.version}}-${{matrix.os.pyengine_tag}}-${{matrix.os.libc_tag}}_${{matrix.os.tag_arch}}.whl"
           sudo rm -vf ./dist/*.tar.gz
      
      - name: Build ${{ matrix.os.name }} wheels and test (old)
        uses: pypa/cibuildwheel@v1.12.0
        if: matrix.cibw.group == 'old'
        with:
          output-dir: dist
        env:
          CIBW_BUILD: ${{ matrix.cibw.build }}
          # Skip 32-bit builds // NO
          # CIBW_SKIP: '*-win32 *_i686'
          CIBW_MANYLINUX_I686_IMAGE: manylinux1
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux1
          CIBW_MUSLLINUX_I686_IMAGE: musllinux_1_2
          CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_2
          # Only build on x86 and arm64 for linux
          CIBW_ARCHS_LINUX: i686 x86_64
          CIBW_BEFORE_ALL_LINUX: >
            python -m pip install --upgrade pip
          # CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          # Building two wheels for MacOS and skipping Universal
          CIBW_ARCHS_MACOS: x86_64
          # Skip testing Apple Silicon until there are GH runners
          CIBW_TEST_SKIP: '*_arm64 *_universal2:arm64'
          CIBW_BEFORE_ALL_MACOS: >
            python -m pip install --upgrade pip
          # CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=11.7
          CIBW_BUILD_VERBOSITY_MACOS: 0
          CIBW_BEFORE_ALL_WINDOWS: >
            python -m pip install --upgrade pip
          CIBW_TEST_COMMAND: >
            python -m unittest discover -v -s {package}

      - name: Build ${{ matrix.os.name }} wheels and test (new)
        uses: joerick/cibuildwheel@v2.22.0
        if: matrix.cibw.group == 'new'
        with:
          output-dir: dist
        env:
          CIBW_BUILD: ${{ matrix.cibw.build }}
          # Skip 32-bit builds // NO
          # CIBW_SKIP: '*-win32 *_i686'
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
          CIBW_MUSLLINUX_I686_IMAGE: musllinux_1_1
          CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_1
          # Only build on x86 and arm64 for linux
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_BEFORE_ALL_LINUX: >
            python -m pip install --upgrade pip
          # CIBW_ARCHS_MACOS: x86_64 arm64 universal2
          # Building two wheels for MacOS and skipping Universal
          CIBW_ARCHS_MACOS: x86_64 arm64
          # Skip testing Apple Silicon until there are GH runners
          CIBW_TEST_SKIP: '*_arm64 *_universal2:arm64'
          CIBW_BEFORE_ALL_MACOS: >
            python -m pip install --upgrade pip
          # CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=11.7
          CIBW_BUILD_VERBOSITY_MACOS: 0
          CIBW_BEFORE_ALL_WINDOWS: >
            python -m pip install --upgrade pip
          CIBW_TEST_COMMAND: >
            python -m unittest discover -v -s {package}
            
#      - name: Upload artifacts
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels
#.         path: ./dist
#          compression-level: 0
          
      - name: Test for secrets access
        id: check_secrets
        # If a third party makes a pull request
        # this allows automated steps below to be skipped
        # and leave a clean PR CI run
        shell: bash
        run: |
          unset HAS_SECRET
          unset HAS_SECRET_TEST
          if [ -n "$SECRET" ]; then HAS_SECRET='true' ; fi
          if [ -n "$SECRET_TEST" ]; then HAS_SECRET_TEST='true' ; fi
          echo ::set-output name=HAS_SECRET::${HAS_SECRET}
          echo ::set-output name=HAS_SECRET_TEST::${HAS_SECRET_TEST}
        env:
          SECRET: "${{ secrets.pypi_password }}"
          SECRET_TEST: "${{ secrets.test_pypi_password }}"

      - name: Install twine
        run: pip install twine

      - name: Publish distribution to PyPI
        if: >
         startsWith(github.event.ref, 'refs/tags') &&
         steps.check_secrets.outputs.HAS_SECRET
        env:
          # If the PR/Push has secret access
          # and PYPI_PASSWORD is in GH Secrets for this repo
          # and this is a tag, publish to PyPI
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
          TWINE_USERNAME: "${{ secrets.pypi_username }}"
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: "${{ secrets.pypi_password }}"
        run: twine upload --non-interactive --skip-existing --verbose 'dist/*'

      - name: Publish distribution to Test PyPI
        if: steps.check_secrets.outputs.HAS_SECRET
        env:
          # If the PR/Push has secret access
          # and TEST_PYPI_PASSWORD is in GH Secrets for this repo
          # then publish each build to test PyPI
          TWINE_REPOSITORY_URL: https://test.pypi.org/legacy/
          TWINE_USERNAME: "${{ secrets.test_pypi_username }}"
          TWINE_NON_INTERACTIVE: 1
          TWINE_PASSWORD: "${{ secrets.test_pypi_password }}"
        run: twine upload --non-interactive --skip-existing --verbose 'dist/*'
